# Build stage for FrankenPHP
FROM dunglas/frankenphp:static-builder AS builder

# Establece el directorio de trabajo
WORKDIR /go/src/app

# Copia los archivos de tu aplicación Laravel
COPY . .

# Instala dependencias de Laravel sin las de desarrollo y optimiza el autoloader
RUN composer install --ignore-platform-reqs --no-dev --classmap-authoritative -a

# Construye el binario estático con todos los archivos necesarios
RUN EMBED=dist/app ./build-static.sh

# Verifica que el binario fue generado correctamente
RUN test -f dist/frankenphp-linux-x86_64 || (echo "Error: Binario no generado" && exit 1)

# Final stage: Imagen ligera basada en Alpine
FROM alpine:3.19.0

# Instala dependencias mínimas necesarias para ejecutar el binario
RUN apk add --no-cache ca-certificates bash

# Establece el directorio de trabajo
WORKDIR /app

# Copia el binario generado desde la etapa de construcción
COPY --from=builder /go/src/app/dist/frankenphp-linux-x86_64 /app/laravel-app

# Da permisos de ejecución al binario
RUN chmod +x /app/laravel-app

# Copia el archivo Caddyfile (opcional, si quieres logs o configuración adicional)
COPY Caddyfile /etc/caddy/Caddyfile

# Configura el directorio de logs y permisos (opcional)
RUN mkdir -p /var/log/caddy && \
    chmod -R 775 /var/log/caddy

# Expone el puerto 80 para el servidor
EXPOSE 80

# Comando de ejecución predeterminado (ejecuta el binario con las opciones necesarias)
CMD ["./laravel-app", "php-server", "--debug"]
