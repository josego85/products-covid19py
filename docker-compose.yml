services:
  app:
    build:
      context: .
      dockerfile: docker/prod/app/Dockerfile
    restart: unless-stopped
    ports:
      - "8080:80"
    depends_on:
      - mysql
    networks:
      - app-network
    
  nginx:
    build:
      context: .
      dockerfile: docker/prod/nginx/Dockerfile
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./public:/var/www/html/public:ro
      - ./docker/prod/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - app-network

  mysql:
    image: mysql:8.0.42
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - 'mysql-data:/var/lib/mysql'
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: